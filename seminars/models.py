from django.db import models, IntegrityError
from django.urls import reverse
from django.template.defaultfilters import slugify
from unidecode import unidecode
from ckeditor.fields import RichTextField

from lectors.models import Lector


class NewOrganizer(models.Model):
    name = models.CharField(max_length=200, verbose_name="–ù–∞–∑–≤–∞–Ω–∏–µ")
    logo = models.ImageField(upload_to='images/organizer_logo', blank=True, verbose_name='–õ–æ–≥–æ—Ç–∏–ø –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏')
    url = models.SlugField(max_length=50, unique=True, verbose_name='URL')

    class Meta:
        verbose_name = '–æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä'
        verbose_name_plural = '–°–ø–∏—Å–æ–∫ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä–æ–≤'

    def __str__(self):
        return self.name


class OrganizerNumbers(models.Model):
    post = models.ForeignKey(NewOrganizer, default=None, on_delete=models.CASCADE, verbose_name='–ü–æ—Å—Ç')
    number = models.CharField(max_length=200, verbose_name='–ù–æ–º–µ—Ä')

    class Meta:
        verbose_name = '–Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞'
        verbose_name_plural = 'üìû –ù–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–æ–≤ –¥–ª—è –∑–≤–æ–Ω–∫–æ–≤'

    def __str__(self):
        return self.number


class OrganizerWhatsAppNumbers(models.Model):
    post = models.ForeignKey(NewOrganizer, default=None, on_delete=models.CASCADE, verbose_name='–ü–æ—Å—Ç')
    number = models.CharField(max_length=200, verbose_name='–ù–æ–º–µ—Ä WhatsApp')

    class Meta:
        verbose_name = '–Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ WhatsApp'
        verbose_name_plural = 'üí¨ –ù–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–æ–≤ –¥–ª—è WhatsApp'

    def __str__(self):
        return self.number


class Category(models.Model):
    category_name = models.CharField(max_length=200, verbose_name='–ö–∞—Ç–µ–≥–æ—Ä–∏—è')
    icon = models.ImageField(upload_to='images/icons', blank=True, verbose_name='–ò–∫–æ–Ω–∫–∞')
    url = models.SlugField(max_length=50, unique=True, verbose_name='URL')

    def __str__(self):
        return self.category_name

    def get_url(self):
        return reverse('seminar_by_category', args=[self.url])

    def get_past_url(self):
        return reverse('past_seminar_by_category', args=[self.url])

    class Meta:
        verbose_name = '–∫–∞—Ç–µ–≥–æ—Ä–∏—è'
        verbose_name_plural = '–ö–∞—Ç–µ–≥–æ—Ä–∏–∏'


class Address(models.Model):
    address = models.CharField(max_length=250, verbose_name='–ì–æ—Ä–æ–¥ –∏ —É–ª–∏—Ü–∞')
    embed_code = models.TextField(blank=True, verbose_name='–ö–æ–¥', help_text='–ö–æ–¥ —Å Google –ö–∞—Ä—Ç—ã')

    def __str__(self):
        return self.address

    class Meta:
        verbose_name = '–∞–¥—Ä–µ—Å'
        verbose_name_plural = '–ê–¥—Ä–µ—Å–∞'


class Seminar(models.Model):
    title = models.CharField(max_length=200, verbose_name='–¢–µ–º–∞')
    content = RichTextField(verbose_name='–ü—Ä–æ–≥—Ä–∞–º–º–∞ –∫—É—Ä—Å–∞')
    category = models.ManyToManyField(Category, blank=True, verbose_name='–ö–∞—Ç–µ–≥–æ—Ä–∏—è')
    lector = models.ManyToManyField(Lector, verbose_name='–õ–µ–∫—Ç–æ—Ä')
    reserve_photo = models.ImageField(upload_to='images/seminar_reserve', verbose_name='–†–µ–∑–µ—Ä–≤–Ω–æ–µ —Ñ–æ—Ç–æ', blank=True,
                                      help_text='–§–æ—Ç–æ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ —Å–µ–º–∏–Ω–∞—Ä–æ–≤. –ù–∞ —Å–ª—É—á–∞–π, –µ—Å–ª–∏ –ª–µ–∫—Ç–æ—Ä–æ–≤ –Ω–µ—Å–∫–æ–ª—å–∫–æ.')
    date = models.DateField(verbose_name='–î–∞—Ç–∞ –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è')
    date_info = models.CharField(max_length=200, blank=True, verbose_name='–î–∞—Ç–∞ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è',
                                 help_text='–ò–º–µ–Ω–Ω–æ —ç—Ç–æ –±—É–¥–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è –Ω–∞ —Å–∞–π—Ç–µ.')
    hours = models.CharField(max_length=200, blank=True, verbose_name='–í—Ä–µ–º—è –Ω–∞—á–∞–ª–∞/–∫–æ–Ω—Ü–∞')
    type = models.CharField(max_length=200, verbose_name='–¢–∏–ø –∫—É—Ä—Å–∞')
    organizer = models.ForeignKey(NewOrganizer, verbose_name='–û—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä', on_delete=models.CASCADE, blank=True,
                                  null=True)
    place = models.ForeignKey(Address, verbose_name='–ú–µ—Å—Ç–æ –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è', on_delete=models.CASCADE)
    price = models.CharField(max_length=200, blank=True, verbose_name='–¶–µ–Ω–∞')
    participants = models.CharField(max_length=200, blank=True, verbose_name='–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤')
    additional_info = models.CharField(max_length=200, blank=True, verbose_name='–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–∞')
    url = models.SlugField(max_length=50, unique=True, verbose_name='URL')
    is_only_for_bego = models.BooleanField(verbose_name='–¢–æ–ª—å–∫–æ –¥–ª—è –∫–æ–ª–ª–µ–∫—Ç–∏–≤–∞ BEGO', help_text='–û—Ç–º–µ—Ç—å—Ç–µ, –µ—Å–ª–∏ —Å–µ–º–∏–Ω–∞—Ä –ø—Ä–æ–≤–æ–¥–∏—Ç—Å—è —Ç–æ–ª—å–∫–æ –¥–ª—è –∫–æ–ª–ª–µ–∫—Ç–∏–≤–∞ BEGO.')
    is_finished = models.BooleanField(verbose_name='–ó–∞–≤–µ—Ä—à—ë–Ω', help_text='–û—Ç–º–µ—Ç—å—Ç–µ, –µ—Å–ª–∏ —Å–µ–º–∏–Ω–∞—Ä –∑–∞–≤–µ—Ä—à—ë–Ω.')
    is_published = models.BooleanField(verbose_name='–û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å', default=True, help_text='–ï—Å–ª–∏ —Å–Ω—è—Ç—å –≥–∞–ª–æ—á–∫—É, —Ç–æ —Å—Ç—Ä–∞–Ω–∏—Ü–∞ —Å–µ–º–∏–Ω–∞—Ä–∞ —Å—Ç–∞–Ω–µ—Ç —á–µ—Ä–Ω–æ–≤–∏–∫–æ–º –∏ –Ω–µ –±—É–¥–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è –Ω–∞ —Å–∞–π—Ç–µ.')

    class Meta:
        verbose_name = '—Å–µ–º–∏–Ω–∞—Ä'
        verbose_name_plural = '–°–µ–º–∏–Ω–∞—Ä—ã'
        ordering = ['-date']

    def get_url(self):
        return reverse('seminar_detail', args=[self.url])

    def __str__(self):
        lectors_list = []
        for lector in self.lector.all():
            lectors_list.append(lector.name)
        lectors = ', '.join(lectors_list)

        return f'{lectors} | {self.date}'


class Live(models.Model):
    video_youtube = models.CharField(max_length=200, blank=True, verbose_name='–í–∏–¥–µ–æ —Å –Æ—Ç—É–± –∫–∞–Ω–∞–ª–∞ (—Å—Å—ã–ª–∫–∞)')
    title = models.CharField(max_length=200, blank=True, verbose_name='–ù–∞–∑–≤–∞–Ω–∏–µ')
    url = models.SlugField(max_length=50, verbose_name='URL')
    is_live = models.BooleanField(verbose_name='–°–µ–π—á–∞—Å –≤ —ç—Ñ–∏—Ä–µ')

    class Meta:
        verbose_name = '–ø—Ä—è–º–æ–π —ç—Ñ–∏—Ä'
        verbose_name_plural = '–ü—Ä—è–º–æ–π —ç—Ñ–∏—Ä'

    def __str__(self):
        return '–ü—Ä—è–º–æ–π —ç—Ñ–∏—Ä'
